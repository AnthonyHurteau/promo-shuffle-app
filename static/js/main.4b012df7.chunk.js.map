{"version":3,"sources":["components/PromoShuffle.module.css","helpers/CardHelper.jsx","theme.jsx","components/NavBarComponent.jsx","components/PromoCardComponent.jsx","components/PromoShuffleComponent.jsx","App.jsx","reportWebVitals.js","index.jsx"],"names":["module","exports","getCardProps","imageNumberArray","Array","fill","map","_","index","sort","Math","random","promos","forEach","p","i","image","title","description","theme","shape","borderRadius","palette","common","black","white","background","paper","default","primary","light","main","dark","contrastText","secondary","error","text","disabled","hint","NavBar","props","AppBar","position","sx","zIndex","drawer","Toolbar","Button","variant","color","onClick","setReset","src","alt","height","width","style","margin","display","PromoCard","Card","maxWidth","CardMedia","component","CardContent","Typography","gutterBottom","PromoShuffle","reset","useState","shuffleIndex","setShuffleIndex","shuffleStart","setShuffleStart","shuffleDone","setshuffleDone","shuffleResult","setShuffleResult","cards","CardHelper","shuffle","shuffling","currentShuffle","setTimeout","length","result","floor","shufflingDone","useEffect","Container","className","styles","imageFadeIn","Grid","container","justifyContent","alignItems","item","xs","sm","Box","overflow","c","imageSlide","showIndicators","showStatus","infiniteLoop","autoPlay","showThumbs","interval","textAlign","CircularProgress","size","App","appliedTheme","createTheme","fallback","ThemeProvider","CssBaseline","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4b012df7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"imageSlide\":\"PromoShuffle_imageSlide__3f5Tv\",\"slide\":\"PromoShuffle_slide__3mb0q\",\"imageFadeIn\":\"PromoShuffle_imageFadeIn__1TKs7\",\"fadeIn\":\"PromoShuffle_fadeIn__1nT0W\"};","module.exports = {\n  getCardProps,\n};\n\nconst imageAmmount = 10;\n\nconst promos = [\n  { title: \"Promo1\", description: \"This is a test that describes promo1.\" },\n  { title: \"Promo2\", description: \"This is a test that describes promo2.\" },\n  { title: \"Promo3\", description: \"This is a test that describes promo3.\" },\n  { title: \"Promo4\", description: \"This is a test that describes promo4.\" },\n  { title: \"Promo5\", description: \"This is a test that describes promo5.\" },\n  { title: \"Promo6\", description: \"This is a test that describes promo6.\" },\n  { title: \"Promo7\", description: \"This is a test that describes promo7.\" },\n  { title: \"Promo8\", description: \"This is a test that describes promo8.\" },\n];\n\nfunction getCardProps() {\n  const imageNumberArray = getImagePathNumber();\n\n  promos.forEach(\n    (p, i) => (p.image = `images/image${imageNumberArray[i]}.jpg`)\n  );\n\n  return promos;\n}\n\nfunction getImagePathNumber() {\n  const imageNumberArray = Array(imageAmmount)\n    .fill()\n    .map((_, index) => index + 1);\n  return imageNumberArray.sort(() => Math.random() - 0.5);\n}\n","const theme = {\n  shape: {\n    borderRadius: 0,\n  },\n  palette: {\n    common: { black: \"#000\", white: \"#fff\" },\n    background: {\n      paper: \"#fff\",\n      default: \"#fafafa\",\n    },\n    primary: {\n      light: \"#335265\",\n      main: \"#032a3b\",\n      dark: \"#021926\",\n      contrastText: \"#fff\",\n    },\n    secondary: {\n      light: \"#b3e0e5\",\n      main: \"#0097a7\",\n      dark: \"#007a8c\",\n      contrastText: \"rgba(0, 0, 0, 1)\",\n    },\n    error: {\n      light: \"#e57373\",\n      main: \"#f44336\",\n      dark: \"#d32f2f\",\n      contrastText: \"#fff\",\n    },\n    text: {\n      primary: \"rgba(0, 0, 0, 0.87)\",\n      secondary: \"rgba(0, 0, 0, 0.54)\",\n      disabled: \"rgba(0, 0, 0, 0.38)\",\n      hint: \"rgba(0, 0, 0, 0.38)\",\n    },\n  },\n};\n\nexport default theme;\n","import React from \"react\";\nimport { AppBar, Toolbar, Button } from \"@mui/material\";\n\nexport default function NavBar(props) {\n  return (\n    <AppBar\n      position=\"fixed\"\n      sx={{ zIndex: (theme) => theme.zIndex.drawer + 1 }}\n    >\n      <Toolbar>\n        <Button\n          variant=\"outlined\"\n          color=\"secondary\"\n          sx={{ position: \"absolute\" }}\n          onClick={() => {\n            props.setReset(true);\n          }}\n        >\n          <img\n            src=\"icon_white.png\"\n            alt=\"Logo\"\n            height=\"30\"\n            width=\"30\" />\n        </Button>\n        <img\n          src=\"promo-shuffle-app/sig_white.png\"\n          alt=\"sig\"\n          style={{ margin: \"auto\", display: \"block\" }}\n          height=\"47\"\n          width=\"187\"\n        />\n      </Toolbar>\n    </AppBar>\n  );\n}\n","import React from \"react\";\nimport { Card, CardMedia, CardContent, Typography } from \"@mui/material\";\n\nexport default function PromoCard(props) {\n  return (\n    <Card sx={{ maxWidth: 345, margin: \"2px\" }}>\n      <CardMedia\n        component=\"img\"\n        height=\"140\"\n        image={props.image}\n        alt=\"img\" />\n      <CardContent>\n        <Typography\n          gutterBottom\n          variant=\"h5\"\n          component=\"div\">\n          {props.title}\n        </Typography>\n        <Typography\n          variant=\"body2\"\n          color=\"text.secondary\">\n          {props.description}\n        </Typography>\n      </CardContent>\n    </Card>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport styles from \"./PromoShuffle.module.css\";\nimport {\n  Container,\n  Toolbar,\n  Button,\n  Grid,\n  Box,\n  CircularProgress,\n} from \"@mui/material\";\nimport CardGiftcardIcon from \"@mui/icons-material/CardGiftcard\";\n\nimport PromoCard from \"./PromoCardComponent\";\nimport CardHelper from \"../helpers/CardHelper\";\nimport { Carousel } from \"react-responsive-carousel\";\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\";\n\nexport default function PromoShuffle({ reset, setReset }) {\n  const [shuffleIndex, setShuffleIndex] = useState(0);\n  const [shuffleStart, setShuffleStart] = useState(false);\n  const [shuffleDone, setshuffleDone] = useState(false);\n  const [shuffleResult, setShuffleResult] = useState();\n\n  const cards = CardHelper.getCardProps();\n\n  function shuffle() {\n    setShuffleStart(true);\n    const shuffleSpeed = 250;\n\n    shuffling(2);\n\n    function shuffling(currentShuffle) {\n      currentShuffle--;\n      for (let i = 1; i <= cards.length; i++) {\n        setTimeout(() => {\n          setShuffleIndex(i - 1);\n          if (i === cards.length && currentShuffle !== 0) {\n            setTimeout(shuffling(currentShuffle), shuffleSpeed);\n          } else if (i === cards.length && currentShuffle === 0) {\n            setTimeout(shufflingDone(), shuffleSpeed);\n          }\n        }, i * shuffleSpeed);\n      }\n    }\n\n    function shufflingDone() {\n      const result = cards[Math.floor(Math.random() * cards.length)];\n      setShuffleResult(result);\n      setshuffleDone(true);\n    }\n  }\n\n  useEffect(() => {\n    if (reset) {\n      setShuffleStart(false);\n      setshuffleDone(false);\n      setShuffleResult(null);\n    }\n    return () => {\n      setReset(false);\n    };\n  }, [reset, setReset]);\n\n  return (\n    <Container\n      sx={{ height: \"100vh\" }}\n      className={styles.imageFadeIn}>\n      <Toolbar />\n      <Grid\n        container\n        justifyContent=\"center\"\n        alignItems=\"center\"\n        sx={{ height: \"75%\" }}\n      >\n        <Grid\n          item\n          xs=\"auto\"\n          sm={6}>\n          {shuffleDone ? (\n            shuffleResult ? (\n              <Box\n                className={styles.imageFadeIn}\n                sx={{ width: \"345px\" }}>\n                <PromoCard\n                  title={shuffleResult.title}\n                  description={shuffleResult.description}\n                  image={shuffleResult.image}\n                />\n              </Box>\n            ) : null\n          ) : shuffleStart ? (\n            <Box sx={{ overflow: \"hidden\" }}>\n              {cards.map((c, i) => {\n                return i === shuffleIndex ? (\n                  <Box\n                    key={`box${i}`}\n                    className={styles.imageSlide}\n                    sx={{ width: \"345px\" }}\n                  >\n                    <PromoCard\n                      key={`card${i}`}\n                      title={c.title}\n                      description={c.description}\n                      image={c.image}\n                    />\n                  </Box>\n                ) : null;\n              })}\n            </Box>\n          ) : (\n            <Carousel\n              showIndicators={false}\n              showStatus={false}\n              infiniteLoop={true}\n              autoPlay={true}\n              showThumbs={false}\n              width={345}\n              interval={3000}\n            >\n              {cards.map((c, i) => {\n                return (\n                  <PromoCard\n                    key={`card${i}`}\n                    title={c.title}\n                    description={c.description}\n                    image={c.image}\n                  />\n                );\n              })}\n            </Carousel>\n          )}\n        </Grid>\n        <Grid\n          textAlign=\"center\"\n          item\n          xs={\"auto\"}\n          sm={6}>\n          <Box sx={{ width: 125, height: 65, margin: \"auto\" }}>\n            {shuffleStart ? (\n              shuffleDone ? null : (\n                <CircularProgress color=\"secondary\" />\n              )\n            ) : (\n              <Button\n                sx={{ width: 125, height: 65 }}\n                size=\"large\"\n                color=\"secondary\"\n                variant=\"contained\"\n                onClick={() => {\n                  shuffle();\n                }}\n              >\n                <CardGiftcardIcon />\n              </Button>\n            )}\n          </Box>\n        </Grid>\n      </Grid>\n    </Container>\n  );\n}\n","import \"./App.css\";\nimport React, { useState, Suspense } from \"react\";\nimport { ThemeProvider, createTheme } from \"@mui/material/styles\";\nimport { CssBaseline } from \"@mui/material\";\nimport theme from \"./theme\";\nimport NavBar from \"./components/NavBarComponent\";\nimport PromoShuffle from \"./components/PromoShuffleComponent\";\n\nfunction App() {\n  const [reset, setReset] = useState(false);\n\n  const appliedTheme = createTheme(theme);\n\n  return (\n    <Suspense fallback=\"loading\">\n      <ThemeProvider theme={appliedTheme}>\n        <CssBaseline />\n        <NavBar setReset={setReset} />\n        <PromoShuffle\n          reset={reset}\n          setReset={setReset} />\n      </ThemeProvider>\n    </Suspense>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}